{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahammed Shaqil\\\\Desktop\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nconst app = new Clarifai.App({\n  apiKey: '9630f147d8c24809ae74a12d8deb2aa4'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'Signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })) : this.state.route === 'Signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ahammed Shaqil\\Desktop\\facerecognition\\src\\App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","Clarifai","Signin","Register","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\n\n\nconst app = new Clarifai.App({\n apiKey: '9630f147d8c24809ae74a12d8deb2aa4'\n});\n\nconst particleOptions =\n{\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{},\n      route: 'Signin',\n      isSignedIn: false,\n      user:{\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''     \n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user:\n      {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    this.setState({box: box})\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response =>\n        {\n          if(response){\n            fetch('http://localhost:3000/image',  {\n              method:'put',\n              headers: {'Content-Type': 'application/json'},\n              body:JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, {\n                entries: count\n              }))\n            })\n        }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n      .catch(err=> console.log(err));\n    }\n\n  onRouteChange = (route) => {\n    if (route === 'Signout'){\n      this.setState({isSignedIn: false})\n    }else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n       <Particles className='particles' params={particleOptions}/>\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        {this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank \n                name={this.state.user.name}\n                entries={this.state.user.entries}\n                />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n           </div>\n          :(\n              this.state.route === 'Signin'\n              ? <Signin loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}